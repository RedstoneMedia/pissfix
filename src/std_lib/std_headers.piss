abs<T: Int | Flt>(x: T) -> T
acos(x: Int | Flt) -> Flt
all_and(arr: Arr<Bool>) -> Bool
append<T>(arr: Arr<T>, value: T) -> Arr<T>
is_arr(obj: Any) -> Bool
array<T>(length: Int, value: T) -> Arr<T>
asin(x: Int | Flt) -> Flt
atan(x: Int | Flt) -> Flt
atan2(y: Int | Flt, x: Int | Flt) -> Flt
is_bool(obj: Any) -> Bool
breakif(condition: Bool)
ceil(x: Int | Flt) -> Int
char_to_str(char: Int) -> Str
chars_to_str(chars: Arr<Str>) -> Str
contains<T>(str: Inner<T>, value: T) -> Bool
cos(x: Int | Flt) -> Flt
div(a: Int | Flt, b: Int | Flt) -> Int
is_empty<T>(obj: Arr<T> | Str) -> Bool
err(message: Str)
exp(x: Int | Flt) -> Flt
find<T>(arr: Inner<T>, value: T) -> Int
find_from<T>(arr: Inner<T>, value: T, startat: Int) -> Int
floor(x: Int | Flt) -> Int
flt(obj: Int | Flt | Str) -> Flt
is_flt(obj: Any) -> Bool
format<T>(format: Str, params: Arr<T>) -> Str
get(str: Str, i: Int) -> Str
image_height<T>(image: Arr<T>) -> Flt
image_width<T>(image: Arr<T>) -> Flt
insert<T>(arr: Arr<T>, index: Int, value: T) -> Arr<T>
int(obj: Flt | Int) -> Int
is_int(obj: Any) -> Bool
length<T>(str: Str | Arr<T>) -> Int
ln(x: Int | Flt) -> Flt
load_value(key: Str) -> Str
log(x: Int | Flt, b: Int | Flt) -> Flt
lower_case(str: Str) -> Str
max<N: Int | Flt>(a: N, b: N) -> N
min<N: Int | Flt>(a: N, b: N) -> N
mod<N: Int | Flt>(a: N, b: N) -> N
is_nil(obj: Any) -> Bool
is_num(obj: Any) -> Bool
is_obj(obj: Any) -> Bool
all_or(arr: Arr<Bool>) -> Bool
is_params(obj: Any) -> Bool
pi() -> Flt
pow(b: Int | Flt, n: Int | Flt) -> Flt
print(value: Int | Flt | Bool | Str)
printf(format: Str, params: Arr<Any>)
printfln(format: Str, params: Arr<Any>)
println(value: Int | Flt | Bool | Str)
rand_flt() -> Flt
rand_int(n: Int) -> Int
rand_seed(seed: Int)
read_char() -> Int
read_flt() -> Flt
read_image_url(url: Str) -> Str
read_int() -> Int
read_line() -> Str
read_url(url: Str) -> Str
remove<T>(arr: Arr<T>, value: T) -> Arr<T>
remove_at<T: Arr<Any> | Str>(arr: T, index: Int) -> T
replace_all(str: Str, regex: Str, replace: Str) -> Str
replace_first(str: Str, regex: Str, replace: Str) -> Str
reverse<T: Arr<Any> | Str>(arr: T) -> T
round(x: Int | Flt) -> Int
set(str: Str, i: Int, value: Str) -> Str
show(title: Str, width: Int | Flt, height: Int | Flt, initialstate: Any, callbacks: Arr<Any>)
show_image(image: Arr<Any>)
shuffle<T>(arr: Arr<T>) -> Arr<T>
sign(x: Int | Flt) -> Int
sin(x: Int | Flt) -> Flt
sleep(delay: Int)
slice<T: Arr<Any> | Str>(arr: T, start: Int, end: Int) -> T
sort<T>(arr: Arr<T>) -> Arr<T>
split(str: Str, regex: Str) -> Arr<Str>
sqrt(x: Int | Flt) -> Flt
stack_count() -> Int
store_value(key: Str, value: Str)
str(obj: Int | Flt | Str) -> Str
str_to_chars(str: Str) -> Arr<Int>
is_str(obj: Any) -> Bool
tan(x: Int | Flt) -> Flt
test_neq<T>(actual: T, not_expected: T)
test_eq<T>(actual: T, expected: T)
test_stats()
time_millis() -> Int
trim(str: Str) -> Str
upper_case(str: Str) -> Str